---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates a Windows ec2 instance with Microsoft Windows Server R2 2012 as the base ami.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AdminPassword:
    Description: Admin Password
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 32
    ConstraintDescription: Must be at least 8 chars long
  User:
    Description: Name of the user
    Type: String
    Default: redsky
  InstanceType:
    Description: Amazon EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
    - t1.micro
    - t2.micro
    - t2.small
    - t2.medium
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SourceCidrForRDP:
    Description: IP Cidr from which you are likely to RDP into the instances. You
      can add rules later by modifying the created security groups e.g. 54.32.98.160/32
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
    Default: 39.41.46.123/32
Mappings:
  AWSRegion2AMI:
    us-east-2:
      Windows2012r2: ami-0b35ce9c4d7659618
      Windows2016: ami-0ea03bb5978f0255e
      Windows2019: ami-086850e3dda52e84a
Resources:
  windowsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and RDP
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp:
          Ref: SourceCidrForRDP
  windowsEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId:
        Ref: windows
  windows:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            c:\cfn\cfn-hup.conf:
              content:
                Fn::Join:
                - ''
                - - "[main]\n"
                  - stack=
                  - Ref: AWS::StackId
                  - "\n"
                  - region=
                  - Ref: AWS::Region
                  - "\n"
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content:
                Fn::Join:
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - 'triggers=post.update'
                  - 'path=Resources.windows.Metadata.AWS::CloudFormation::Init'
                  - 'action=cfn-init.exe -v -s '
                  - Ref: AWS::StackId
                  - " -r windows"
                  - " --region "
                  - Ref: AWS::Region
                  - "\n"
            C:\Downloads\packages\Git-2.31.1-64-bit.exe:
              source: https://github.com/git-for-windows/git/releases/download/v2.31.1.windows.1/Git-2.31.1-64-bit.exe
          commands:
            1-Install git:
              command: powershell.exe -ExecutionPolicy RemoteSigned -Command Start-Process -FilePath C:\Downloads\packages\Git-2.31.1-64-bit.exe -Args '/silent /install' -Verb RunAs -wait;
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - c:\cfn\cfn-hup.conf
                - c:\cfn\hooks.d\cfn-auto-reloader.conf
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - AWSRegion2AMI
        - Ref: AWS::Region
        - Windows2012r2
      SecurityGroups:
      - Ref: windowsSecurityGroup
      KeyName:
        Ref: KeyName
      UserData:
        Fn::Base64: 
          !Sub |
            <script>
            net user /add ${User} ${AdminPassword}
            net localgroup administrators ${User} /add
            @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
            Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
            mkdir C:\Downloads\packages
            cfn-init.exe -v --stack ${AWS::StackId} --resource windows --region ${AWS::Region}
            cfn-signal.exe -e %ERRORLEVEL% --stack ${AWS::StackId} --resource windows --region ${AWS::Region}
            choco upgrade chocolatey -y
            choco install openjdk11 -y 
            choco install openjdk8 -y 
            choco install maven --version=3.5.2 -y 
            choco install cygwin -y
            choco install openssh -y
            powershell Install-WindowsFeature Net-Framework-Core
            choco install wixtoolset -y 
            </script>